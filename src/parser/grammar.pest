// Helpful stuff:
//  - https://pest.rs/book/grammars/built-ins.html
//  - try online https://pest.rs/#editor
//  - Modifiers (_@$!) https://docs.rs/pest_derive/2.1.0/pest_derive/#modifiers
// Example: https://github.com/Keats/tera/tree/master/src/parser

// Set whitespace
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

number = @{ "-"? ~ ASCII_DIGIT+ }
IDENTIFIER_CHARS = @{  ASCII_ALPHANUMERIC+ }

nil = { "nil" }

// :1338
identifier = @{ IDENTIFIER_CHARS }
var_ref = @{ ":" ~ identifier }
prelude_var = @{ "@" ~ identifier }
var = ${ prelude_var | var_ref | identifier }

// Operators
ap = { "ap"  }
cons = { "cons" | "vec" }
car = { "car" }
cdr = { "cdr" }
neg = { "neg" }
eq = { "eq" }
lt = { "lt" }
inc = { "inc" }
dec = { "dec" }
modulate = { "mod" }
demodulate = { "dem" }
mul = { "mul" }
add = { "add" }
div = { "div" }
s = { "s" }
c = { "c" }
b = { "b" }
i = { "i" }
t = { "t" }
f = { "f" }
if0 = { "if0" }
isnil = { "isnil" }
list = !{ "(" ~ (symbol+ ~ ("," ~ symbol+)*)? ~ ")" }

instruction = _{
 ap | cons | car | cdr | dec | neg | nil | eq | lt |
 div | mul | add | modulate | demodulate | list | s | c | b | if0 |  inc | isnil | i | t | f
}

non_instruction = @{ instruction ~ ( " " | EOI ) }

symbol = ${ number | !non_instruction ~ var  | instruction }

assignment = { var ~ "=" ~ symbol+  }

args = { prelude_var+ }
func_name = { identifier ~ args }
prelude_function = { func_name ~ "=" ~ symbol+  }

line = { SOI ~ (  !prelude_function ~ assignment | prelude_function   )? ~ EOI }
